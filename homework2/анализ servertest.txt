для обработки системных вызовов я использовал такую команду:

strace -p <pid> -o strace-file2 -c -s 512
эта команда вывела какие системные вызовы делает процесс под соотведствующим id в виде как описано ниже в файл с именем strace-file2. вот вывод этой команды

% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 45,91    0,024518         383        64        15 futex
 22,69    0,012115         403        30           epoll_pwait
 20,96    0,011193          72       154           nanosleep
  1,98    0,001057          39        27           openat
  1,84    0,000981          27        36           write
  0,97    0,000516         258         2           fork
  0,92    0,000489           4       104           fcntl
  0,82    0,000437          21        20         6 read
  0,82    0,000436          54         8         4 accept4
  0,77    0,000413          82         5           close
  0,60    0,000320           9        34        26 epoll_ctl
  0,48    0,000258          16        16           setsockopt
  0,46    0,000245          81         3           tgkill
  0,30    0,000159         159         1         1 restart_syscall
  0,18    0,000095          95         1           mmap
  0,17    0,000091          22         4           getsockname
  0,10    0,000052          17         3           getpid
  0,03    0,000017           5         3           rt_sigreturn
  0,02    0,000013          13         1           sched_yield
------ ----------- ----------- --------- --------- ----------------
100,00    0,053405         103       516        52 total

эти вызовы в основном относятся к файловой системе, что значит, что servertest пытается записывать и читать файлы, но у него возникают ошибки. так же большую часть времени у него занимал вызов, предназначенный для синхронизации потоков и паузы процессов. это пока всё, что я смог понять.